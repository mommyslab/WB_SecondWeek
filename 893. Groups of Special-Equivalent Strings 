class Solution {
public:
    bool match(string a, string b) {
        int vis[256];
        memset(vis, 0, sizeof vis);
        for(int i = 0; i < a.size(); i += 2) {
            vis[a[i]]++;
        }
        for(int i = 0; i < b.size(); i += 2) {
            vis[b[i]]--;
        }
        for(int i = 0; i < 256; i++) {
            if(vis[i] != 0) {
                return false;
            }
        }
        memset(vis, 0, sizeof vis);
        for(int i = 1; i < a.size(); i += 2) {
            vis[a[i]]++;
        }
        for(int i = 1; i < b.size(); i += 2) {
            vis[b[i]]--;
        }
        for(int i = 0; i < 256; i++) {
            if(vis[i] != 0) {
                return false;
            }
        }
        return true;
    }
    int numSpecialEquivGroups(vector<string>& A) {
        int groups[1000];
        int ans = 0;
        memset(groups, 0, sizeof groups);
        for(int i = 0; i < A.size(); i++) {
            if(groups[i] == 0) {
                groups[i] = ++ans;
            }else {
                continue;
            }
            for(int j = i + 1; j < A.size(); j++) {
                if(match(A[i], A[j])) {
                    groups[j] = groups[i]; 
                }
            }
        }
        return ans;
    }
};